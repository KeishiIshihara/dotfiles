#!/bin/bash
#--------------------------------
#
#  A tmux auto-run script
#
#--------------------------------
# source: https://qiita.com/ssh0/items/a9956a74bff8254a606a


PERCOL=peco

function is_exists() { type "$1" >/dev/null 2>&1; return $?; }
function is_osx() { [[ $OSTYPE == darwin* ]]; }
function is_screen_running() { [ ! -z "$STY" ]; }
function is_tmux_runnning() { [ ! -z "$TMUX" ]; }
function is_screen_or_tmux_running() { is_screen_running || is_tmux_runnning; }
function shell_has_started_interactively() { [ ! -z "$PS1" ]; }
function is_ssh_running() { [ ! -z "$SSH_CONECTION" ]; }

function tmux_logo () {
echo '\e[31m
    ooooooooooooo
    8`   888   `8
         888      ooo. .oo.  .oo.   oooo  oooo  oooo    ooo
         888      `888P"Y88bP"Y88b  `888  `888   `88b..8P
         888       888   888   888   888   888     Y888`
         888       888   888   888   888   888   .o8"`88b
        o888o     o888o o888o o888o  `V88V"V8P` o88`   888o\e[m\n'
}

function tmux_automatically_attach_session()
{
    if is_screen_or_tmux_running; then
        ! is_exists 'tmux' && return 1

        if is_tmux_runnning; then
            tmux_logo
        elif is_screen_running; then
            echo "This is on screen."
        fi
    else

        if shell_has_started_interactively && ! is_ssh_running; then
            if ! is_exists 'tmux'; then
                echo 'Error: tmux command not found' 2>&1
                return 1
            fi

            if tmux has-session >/dev/null 2>&1; then
                # PERCOL=escape # for debug
                if is_exists $PERCOL; then
                    # get the IDs
                    ID="$(tmux list-sessions)"
                    if [[ -z "$ID" ]]; then # or if [ "$?"=1 ];
                        tmux new-session
                    fi
                    create_new_session="Create New Session"
                    ID="$ID\n${create_new_session}:"
                    ID="$(echo $ID | $PERCOL | cut -d: -f1)"
                    if [[ "$ID" = "${create_new_session}" ]]; then
                        tmux new-session
                    elif [ -n "$ID" ]; then
                        tmux attach-session -t "$ID"
                    else
                        : # Start terminal only
                    fi
                else
                    tmux ls
                    ID="$(tmux ls)"
                    IDs=$(echo "$ID" | cut -d: -f1)
                    echo -n "Tmux: attach? (y/N/session) "
                    read
                    if [[ "$REPLY" =~ ^[Yy]$ ]]; then # Y(y)
                        echo 'Attaching previous session..'
                        tmux attach-session
                    elif [[ "$REPLY" =~ ^[Nn]$ ]]; then # N(n)
                        echo 'Starting nomal terminal only..'
                    elif [ -n "$REPLY" ] && [ $(echo "$IDs" | grep "${REPLY}") ]; then # session
                        echo "Attaching to session: $REPLY"
                        tmux attach-session -t "$REPLY"
                    elif [ -n "$REPLY" ]; then # if $REPLY has more than 0 strings
                        # tmux attach-session -t "$ID"
                        echo "$REPLY"': No such tmux session found.'
                    else
                        echo 'Starting nomal terminal only..'
                    fi
                fi

            else # if server is not running
                echo -n "Tmux: create new session? (y/N) "
                read
                if [[ "$REPLY" =~ ^[Yy]$ ]]; then # Y(y)
                    echo 'Creating new session..'
                    tmux new-session
                elif [[ "$REPLY" =~ ^[Nn]$ ]]; then # N(n)
                    echo 'Starting normal terminal only..'
                else
                    :
                fi
            fi

        fi
    fi
}

if [[ -n $TMUX ]]; then
  alias ta='tmux switch-client -t'
else
  alias ta='tmux attach-session'
fi
alias t='tmux ls'
alias tl='tmux ls'
alias tksv='tmux kill-server'
alias tkss='tmux kill-session -t'
alias tk='tmux list-keys'
alias ts='tmux_automatically_attach_session'

tmux_automatically_attach_session
